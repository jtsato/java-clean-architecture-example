logging:
   level:
      io.github.jtsato.bookstore: info
      org.springframework.web: warn
      io.swagger.models.parameters.AbstractSerializableParameter: error
server:
   http2:
      enabled: true
   port: ${PORT:8081}
   error:
      whitelabel:
         enabled: false
spring:
   application:
      name: bookstore
   devtools:
      restart:
         enabled: false
      livereload:
         enabled: false      
   jackson:
      serialization:
         write-dates-as-timestamps: false
         fail-on-empty-beans: false
   datasource:
      url: jdbc:mysql://localhost:3306/db?useSSL=false
      username: bookstore
      password: bookstore
      sqlScriptEncoding: UTF-8
      testWhileIdle: true
      validationQuery: SELECT 1         
      hikari:
         minimum-idle: 2
         maximum-pool-size: 10
         connection-timeout: 30000
         idle-timeout: 300000
         max-lifetime: 600000
   jpa:
      open-in-view: false
      show-sql: false
      properties:
         hibernate:
            dialect: org.hibernate.dialect.MySQL5Dialect
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
            generate_statistics: false
            jdbc:
               batch_size: 30
               order_inserts: true
               order_updates: true
            cache:
               use_second_level_cache: false
            connection:
               provider_disables_autocommit: false
      hibernate:
         ddl-auto: update
   data:
      rest:
         detection-strategy: visibility
   h2:
      console:
         enabled: false
         path: /h2-console
         settings:
            trace: false
            web-allow-others: false
   rabbitmq:
      host: localhost
      port: 5672
      password: guest
      username: guest
springdoc:
   enabled: false
   swagger-ui:
      path: /swagger-ui.html
bookstore:
   rabbitmq:
      exchange:
         register-author: register-author-exchange
         register-book: register-book-exchange
         update-author-by-id: update-author-by-id-exchange
         update-book-by-id: update-book-by-id-exchange
         remove-author-by-id: remove-author-by-id-exchange
         remove-book-by-id: remove-book-by-id-exchange
         save-book-document: save-book-document-exchange
      queue:
         register-author: register-author-queue
         register-book: register-book-queue
         update-author-by-id: update-author-by-id-queue
         update-book-by-id: update-book-by-id-queue
         remove-author-by-id: remove-author-by-id-queue
         remove-book-by-id: remove-book-by-id-queue
         save-book-document: save-book-document-queue
      routingkey:
         register-author: register-author-routingkey
         register-book: register-book-routingkey
         update-author-by-id: update-author-by-id-routingkey
         update-book-by-id: update-book-by-id-routingkey
         remove-author-by-id: remove-author-by-id-routingkey
         remove-book-by-id: remove-book-by-id-routingkey
         save-book-document: save-book-document-routingkey
okta:
  oauth2:
    clientId: 0oaqaxryprOC0cUpb4x6
    clientSecret: 4tbTPHdWTvswl88eA41Evay1uBUWvbphMK0962yf
    issuer: https://dev-507648.okta.com/oauth2/default
    audience: api://default
    groups-claim: groups